<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * process user login
     *
     * @return mixed
     */
    public function processLogin()
    {
        $login = new User();
        $isLoggedIn = false;
        $username = filter_input(INPUT_POST, 'username', FILTER_SANITIZE_STRING);
        $password = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);
        $isLoggedIn = $login->canFindMatchingUsernameAndPassword($username, $password);

        $action = ($_POST['login']);
        switch($action){
            case 'login':
                if($isLoggedIn)
                {
                    $template = 'loginSuccess';
                    $argsArray = [
                        'username' => $username,
                    ];
                }else{
                    $message = 'Invalid username or password.  Please try again.';
                    $template = 'login';
                    $argsArray = [
                        'message' => $message
                    ];
                }
                break;
            case 'sign up':
            default:
                $template = 'createUserForm';
                $argsArray = [];
                break;
        }
        return $twig->render($template . '.html.twig', $argsArray);
    }

    /**
     * function to test if username and password are in the database
     * @param $username
     * @param $password
     * @return array
     */
    public function canFindMatchingUsernameAndPassword($username, $password)
    {
        $connection = $this->getConnection();

        $sql = "SELECT username, password FROM user WHERE username='$username' AND password='$password'";

        $statement = $connection->query($sql);
        $user = $statement->fetchAll();

        return $user;
    }
}
